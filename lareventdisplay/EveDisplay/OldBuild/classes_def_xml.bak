<!--                                                                                  -->
<!--  $Id: classes_def.xml,v 1.10 2010/04/12 18:12:28  Exp $                          -->
<!--  $Author:  $                                                                     -->
<!--  $Date: 2010/04/12 18:12:28 $                                                    -->
<!--                                                                                  -->
<!--  Include art::Wrapper lines for objects that we would like to put into the event -->
<!--  Include the non-wrapper lines for all objects on the art::Wrapper lines and     -->
<!--  for all objects that are data members of those objects.                         -->


<lcgdict>
 <!-- support classes (e.g., elements of data product classes) -->
   <!-- for art association metadata -->
 <class name="std::vector<unsigned short>"                                />
 
 <!-- data product classes -->
 <class name="TEveTrack" ClassVersion="0" persistent="false"/>
 
 <!-- art pointers and pointer vectors -->
 <class name="art::Ptr<TEveTrack>"                            />
 <class name="art::PtrVector<TEveTrack>"                      />
 
 <!-- pairs and tuples for associations -->
 <class name="std::pair< art::Ptr<TEveTrack>, art::Ptr<recob::Track>      >" />
 
 <!-- associations -->
 <class name="art::Assns<TEveTrack,       recob::Track,      void>"          />

 <!-- vectors for data products -->
 <class name="std::vector<TEveTrack>"       />
 
 <!-- art data product wrappers -->
 <class name="art::Wrapper< std::vector< TEveTrack                        > >" />
 <class name="art::Wrapper< std::vector< art::PtrVector< TEveTrack        > >" />
 
 <!-- art association wrappers -->
 <class name="art::Wrapper< art::Assns<TEveTrack,       recob::Track,      void> >"          />

<!-- <ioread 
    version="[-11]" 
    sourceClass="recob::Wire" 
    source="std::vector<double> fSignal" 
    targetClass="recob::Wire" 
    target="fSignal" 
    include="algorithm;vector;iterator;Wire.h">
    <![CDATA[
       fSignal.reserve(onfile.fSignal.size());
       std::copy(onfile.fSignal.begin(), onfile.fSignal.end(), std::back_inserter(fSignal));]]>
 </ioread> 
-->

</lcgdict>
